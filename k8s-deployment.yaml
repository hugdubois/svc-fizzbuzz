---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master           # Unique name for the deployment
  labels:
    app: redis                 # Labels to be applied to this resource
spec:
  selector:
    matchLabels:               # This deployment applies to the Pods matching these labels
      app: redis
      role: master
      tier: backend
  replicas: 1                  # Run a single pod in the deployment
  template:                    # Template for the pods that will be created by this deployment
    metadata:
      labels:                  # Labels to be applied to the Pods in this deployment
        app: redis
        role: master
        tier: backend
    spec:                      # Spec for the container which will be run inside the Pod.
      containers:
      - name: master
        image: redis
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service                   # Type of Kubernetes resource
metadata:
  name: redis-master
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379                   # Map incoming connections on port 6379 to the target port 6379 of the Pod
    targetPort: 6379
  selector:                      # Map any Pod with the specified labels to this service
    app: redis
    role: master
    tier: backend
---
apiVersion: apps/v1
kind: Deployment                 # Type of Kubernetes resource
metadata:
  name: svc-fizzbuzz             # Name of the Kubernetes resource
spec:
  replicas: 3                    # Number of pods to run at any given time
  selector:
    matchLabels:
      app: svc-fizzbuzz          # This deployment applies to any Pods matching the specified label
  template:                      # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels:                    # The labels that will be applied to all of the pods in this deployment
        app: svc-fizzbuzz
    spec:                        # Spec for the container which will run in the Pod
      containers:
      - name: svc-fizzbuzz
        image: hugdubois/svc-fizzbuzz:0.0.6_dev
        imagePullPolicy: Always
        args: ["serve", "--database-connect", "redis-master:6379"]
        ports:
          - containerPort: 8080  # Should match the port number that the Go application listens on
        livenessProbe:           # To check the health of the Pod
          httpGet:
            path: /status
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:          # To check if the Pod is ready or not
          httpGet:
            path: /version
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
---
apiVersion: v1
kind: Service                    # Type of kubernetes resource
metadata:
  name: svc-fizzbuzz             # Name of the resource
spec:
  selector:
    app: svc-fizzbuzz            # Map any pod with name svc-fizzbuzz to this service
  type: LoadBalancer             # If you're deploying on cloud, you can use `type: LoadBalancer`. It will automatically provision a load balancer with the cloud provider that will route traffic to your application.
  ports:                         # Take incoming HTTP requests on port 8080 and forward them to the targetPort of 8080
  - name: http
    port: 8080
    targetPort: 8080
